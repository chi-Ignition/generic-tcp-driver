HeaderDataType.Dummy=Dummy
HeaderDataType.Byte=Festes Byte
HeaderDataType.Word=Festes Wort
HeaderDataType.PacketSize=Paketlänge
HeaderDataType.Timestamp=Paket Zeitstempel
HeaderDataType.SequenceId=Sequenz Id

offsetlabel=Offset
datatypelabel=Datentyp
valuelabel=Wert
sizelabel=Länge

useHeader.DisplayName=Header verwenden
useHeader.Description=Falls ausgewählt erwartet der Treiber, daß alle empfangenen Pakete mit dem hier konfigurierten Header beginnen.
sizeIncludesHeader.DisplayName=Paketlänge inkl. Header
sizeIncludesHeader.Description=Auswählen wenn die empfangene Paketlänge die Länge des Headers selbst enthält.
useHandshake.DisplayName=Handshake Nachricht verwenden
useHandshake.Description=Falls ausgewählt wird die definierte Handshake Nachricht nach der Auswertung des Pakets an das Gerät gesendet.
handshakeMsg.DisplayName=Handshake Nachricht
handshakeMsg.Description=Die zu sendende Handshake Nachricht. Eine Komma-getrennte List von Bytes. Es werden dezimale, hexadezimale und oktale Werte akzeptiert. Die Angaben 'timestamp' und 'sequence' werden durch die empfangenen Werte ersetzt, 'lenb' (Byte) und 'lenw' (Wort) werden durch die Länge der Nachricht ersetzt.<br />Beispiel: '<code>lenw, 0xfe, 0xfe, timestamp</code>'

noheaderitems=Es sind noch keine Headerdaten konfiguriert...

# Validator messages
rawValue.ParseableValidator=Die Eingabe '${input}' kann nicht als Ganzzahl verarbeitet werden.
rawValue.RangeValidator=Der Wert muss zwischen ${minimum} und ${maximum} liegen.
dataType.SpecialTypesValidator=Spezielle Datentypen dürfen jeweils nur einmal verwendet werden.
size.RangeValidator=Die Arraylänge muß zwischen Array ${minimum} und ${maximum} liegen.
useHeader.NoSizeTag=Um den Header zu verwenden muss ein Tag mit der Paketlänge konfiguriert werden.
handshakeMsg.ByteStringValidator=Handshake Nachricht kann nicht ausgewertet werden (${error}).